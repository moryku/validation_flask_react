{"ast":null,"code":"var _jsxFileName = \"/Users/Remap/WebstormProjects/news/src/components/form/HomeForm.js\";\nimport { Form, Icon, Input, Button, Radio } from 'antd';\nimport React from \"react\";\nimport { Row, Col } from 'antd';\nimport RegisterForm from \"./RegisterForm\";\nimport LoginForm from \"./LoginForm\";\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nconst FORM_LOGIN = 1;\nconst FORM_REGISTER = 2;\n\nclass HomeForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.handleFormLayoutChange = e => {\n      this.setState({\n        typeForm: e.target.value,\n        showLoginForm: e.target.value == FORM_LOGIN ? true : false\n      });\n    };\n\n    this.state = {\n      typeForm: FORM_LOGIN,\n      showLoginForm: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n    const usernameError = isFieldTouched('username') && getFieldError('username');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Radio.Group, {\n      defaultValue: \"horizontal\",\n      onChange: this.handleFormLayoutChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Radio.Button, {\n      value: FORM_LOGIN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Signin\"), React.createElement(Radio.Button, {\n      value: FORM_REGISTER,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.state.showLoginForm ? React.createElement(LoginForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(RegisterForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nHomeForm = Form.create()(HomeForm);\nexport { HomeForm as default }; // imported as SomeComponent","map":{"version":3,"sources":["/Users/Remap/WebstormProjects/news/src/components/form/HomeForm.js"],"names":["Form","Icon","Input","Button","Radio","React","Row","Col","RegisterForm","LoginForm","hasErrors","fieldsError","Object","keys","some","field","FORM_LOGIN","FORM_REGISTER","HomeForm","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","handleFormLayoutChange","setState","typeForm","target","value","showLoginForm","state","componentDidMount","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","create","default"],"mappings":"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","sourcesContent":["import {Form, Icon, Input, Button, Radio} from 'antd';\nimport React from \"react\";\nimport {Row, Col} from 'antd';\nimport RegisterForm from \"./RegisterForm\";\nimport LoginForm from \"./LoginForm\";\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nconst FORM_LOGIN = 1\nconst FORM_REGISTER = 2\n\nclass HomeForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeForm: FORM_LOGIN,\n            showLoginForm: true\n        }\n    }\n\n\n    componentDidMount() {\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    handleFormLayoutChange = e => {\n        this.setState({\n            typeForm: e.target.value,\n            showLoginForm: e.target.value == FORM_LOGIN ? true : false\n        })\n    }\n\n\n    render() {\n        const {getFieldDecorator, getFieldsError, getFieldError, isFieldTouched} = this.props.form;\n\n        // Only show error after a field is touched.\n        const usernameError = isFieldTouched('username') && getFieldError('username');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n        return (\n            <div className={\"main\"}>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\n\n                            <Radio.Group defaultValue=\"horizontal\" onChange={this.handleFormLayoutChange}>\n                                <Radio.Button value={FORM_LOGIN}>Signin</Radio.Button>\n                                <Radio.Button value={FORM_REGISTER}>Register</Radio.Button>\n                            </Radio.Group>\n                            <br/><br/>\n                            {this.state.showLoginForm ? <LoginForm/> : <RegisterForm/>}\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nHomeForm = Form.create()(HomeForm);\nexport {HomeForm as default};  // imported as SomeComponent"]},"metadata":{},"sourceType":"module"}